import{_ as i,r,o as l,c,d as e,a as s,e as t,f as o,b as a}from"./app-IEn2CkPT.js";const p={},d=e("h1",{id:"eslint-plugin-perfectionist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eslint-plugin-perfectionist","aria-hidden":"true"},"#"),t(" ESLint Plugin Perfectionist")],-1),u=e("p",null,[e("img",{src:"https://raw.githubusercontent.com/azat-io/eslint-plugin-perfectionist/main/docs/public/logo.svg",alt:"ESLint Plugin Perfectionist logo",align:"right",height:"170",width:"170"})],-1),h={href:"https://www.npmjs.com/package/eslint-plugin-perfectionist",target:"_blank",rel:"noopener noreferrer"},g=e("img",{src:"https://img.shields.io/npm/v/eslint-plugin-perfectionist.svg?color=4a32c3",alt:"Version"},null,-1),f={href:"https://github.com/azat-io/eslint-plugin-perfectionist/blob/main/license",target:"_blank",rel:"noopener noreferrer"},_=e("img",{src:"https://img.shields.io/badge/license-MIT-4a32c3.svg",alt:"GitHub license"},null,-1),m=a('<p>ESLint plugin that sets rules to format your code and make it consistent.</p><p>This plugin defines rules for sorting various data, such as objects, imports, TypeScript types, enums, JSX props, Svelte attributes, etc. alphabetically, naturally, or by line length</p><p>All rules are automatically fixable. It&#39;s safe!</p><h2 id="ü¶Ñ-why" tabindex="-1"><a class="header-anchor" href="#ü¶Ñ-why" aria-hidden="true">#</a> ü¶Ñ Why</h2><p>Sorting imports and properties in software development offers numerous benefits:</p><ul><li><p><strong>Readability</strong>: Finding declarations in a sorted, large list is a little faster. Remember that you read the code much more often than you write it.</p></li><li><p><strong>Maintainability</strong>: Sorting imports and properties is considered a good practice in software development, contributing to code quality and consistency across the codebase.</p></li><li><p><strong>Code Review and Collaboration</strong>: If you set rules that say you can only do things one way, then no one will have to spend time thinking about how to do it.</p></li><li><p><strong>Code Uniformity</strong>: When all code looks exactly the same, it is very hard to see who wrote it, which makes achieving the lofty goal of <em>collective code ownership</em> easier.</p></li><li><p><strong>Aesthetics</strong>: This not only provides functional benefits, but also gives the code an aesthetic appeal, visually pleasing and harmonious structure. Take your code to the beauty salon!</p></li></ul><h2 id="üìñ-documentation" tabindex="-1"><a class="header-anchor" href="#üìñ-documentation" aria-hidden="true">#</a> üìñ Documentation</h2>',7),b={href:"https://eslint-plugin-perfectionist.azat.io",target:"_blank",rel:"noopener noreferrer"},v=e("p",null,[e("img",{src:"https://raw.githubusercontent.com/azat-io/eslint-plugin-perfectionist/main/docs/public/example.png",alt:"ESLint Plugin Perfectionist usage example"})],-1),k=e("h2",{id:"üíø-installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#üíø-installation","aria-hidden":"true"},"#"),t(" üíø Installation")],-1),y={href:"https://eslint.org",target:"_blank",rel:"noopener noreferrer"},x=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Next, install <code>eslint-plugin-perfectionist</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint-plugin-perfectionist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="üöÄÔ∏èÔ∏èÔ∏èÔ∏è-usage" tabindex="-1"><a class="header-anchor" href="#üöÄÔ∏èÔ∏èÔ∏èÔ∏è-usage" aria-hidden="true">#</a> üöÄÔ∏èÔ∏èÔ∏èÔ∏è Usage</h2><p>Add <code>eslint-plugin-perfectionist</code> to the plugins section of the ESLint configuration file and define the list of rules you will use.</p>`,5),q={id:"legacy-config-eslintrc",tabindex:"-1"},j=e("a",{class:"header-anchor",href:"#legacy-config-eslintrc","aria-hidden":"true"},"#",-1),w={href:"https://eslint.org/docs/latest/use/configure/configuration-files",target:"_blank",rel:"noopener noreferrer"},S=e("code",null,".eslintrc",-1),z=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;perfectionist&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;perfectionist/sort-objects&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;natural&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;asc&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),L={id:"flat-config-eslint-config-js-requires-eslint-v8-23-0",tabindex:"-1"},C=e("a",{class:"header-anchor",href:"#flat-config-eslint-config-js-requires-eslint-v8-23-0","aria-hidden":"true"},"#",-1),E={href:"https://eslint.org/docs/latest/use/configure/configuration-files-new",target:"_blank",rel:"noopener noreferrer"},T=e("code",null,"eslint.config.js",-1),P=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> perfectionist <span class="token keyword">from</span> <span class="token string">&#39;eslint-plugin-perfectionist&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      perfectionist<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;perfectionist/sort-objects&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;natural&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token string">&#39;asc&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="‚öôÔ∏è-configs" tabindex="-1"><a class="header-anchor" href="#‚öôÔ∏è-configs" aria-hidden="true">#</a> ‚öôÔ∏è Configs</h2><p>The easiest way to use <code>eslint-plugin-perfectionist</code> is to use ready-made configs. Config files use all the rules of the current plugin, but you can override them.</p>`,3),I={id:"legacy-config-eslintrc-1",tabindex:"-1"},N=e("a",{class:"header-anchor",href:"#legacy-config-eslintrc-1","aria-hidden":"true"},"#",-1),V={href:"https://eslint.org/docs/latest/use/configure/configuration-files",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,".eslintrc",-1),F=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;plugin:perfectionist/recommended-natural&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),B={id:"flat-config-eslint-config-js",tabindex:"-1"},W=e("a",{class:"header-anchor",href:"#flat-config-eslint-config-js","aria-hidden":"true"},"#",-1),M={href:"https://eslint.org/docs/latest/use/configure/configuration-files-new",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,"eslint.config.js",-1),D=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> perfectionistNatural <span class="token keyword">from</span> <span class="token string">&#39;eslint-plugin-perfectionist/configs/recommended-natural&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  perfectionistNatural<span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-of-configs" tabindex="-1"><a class="header-anchor" href="#list-of-configs" aria-hidden="true">#</a> List of Configs</h3>`,2),J=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Description")])],-1),X={style:{"text-align":"left"}},G={href:"https://eslint-plugin-perfectionist.azat.io/configs/recommended-alphabetical",target:"_blank",rel:"noopener noreferrer"},H=e("td",{style:{"text-align":"left"}},"all plugin rules with alphabetical sorting in ascending order",-1),U={style:{"text-align":"left"}},Y={href:"https://eslint-plugin-perfectionist.azat.io/configs/recommended-natural",target:"_blank",rel:"noopener noreferrer"},O=e("td",{style:{"text-align":"left"}},"all plugin rules with natural sorting in ascending order",-1),Q={style:{"text-align":"left"}},K={href:"https://eslint-plugin-perfectionist.azat.io/configs/recommended-line-length",target:"_blank",rel:"noopener noreferrer"},Z=e("td",{style:{"text-align":"left"}},"all plugin rules with sorting by line length in descending order",-1),$=e("h2",{id:"‚úÖ-rules",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#‚úÖ-rules","aria-hidden":"true"},"#"),t(" ‚úÖ Rules")],-1),ee={href:"https://eslint.org/docs/user-guide/command-line-interface#--fix",target:"_blank",rel:"noopener noreferrer"},te=e("code",null,"--fix",-1),ne=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Description"),e("th",{style:{"text-align":"left"}},"üîß")])],-1),se={style:{"text-align":"left"}},ae={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-array-includes",target:"_blank",rel:"noopener noreferrer"},oe=e("td",{style:{"text-align":"left"}},"enforce sorted arrays before include method",-1),ie=e("td",{style:{"text-align":"left"}},"üîß",-1),re={style:{"text-align":"left"}},le={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-astro-attributes",target:"_blank",rel:"noopener noreferrer"},ce=e("td",{style:{"text-align":"left"}},"enforce sorted Astro attributes",-1),pe=e("td",{style:{"text-align":"left"}},"üîß",-1),de={style:{"text-align":"left"}},ue={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-classes",target:"_blank",rel:"noopener noreferrer"},he=e("td",{style:{"text-align":"left"}},"enforce sorted classes",-1),ge=e("td",{style:{"text-align":"left"}},"üîß",-1),fe={style:{"text-align":"left"}},_e={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-enums",target:"_blank",rel:"noopener noreferrer"},me=e("td",{style:{"text-align":"left"}},"enforce sorted TypeScript enums",-1),be=e("td",{style:{"text-align":"left"}},"üîß",-1),ve={style:{"text-align":"left"}},ke={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-exports",target:"_blank",rel:"noopener noreferrer"},ye=e("td",{style:{"text-align":"left"}},"enforce sorted exports",-1),xe=e("td",{style:{"text-align":"left"}},"üîß",-1),qe={style:{"text-align":"left"}},je={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-imports",target:"_blank",rel:"noopener noreferrer"},we=e("td",{style:{"text-align":"left"}},"enforce sorted imports",-1),Se=e("td",{style:{"text-align":"left"}},"üîß",-1),ze={style:{"text-align":"left"}},Le={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-interfaces",target:"_blank",rel:"noopener noreferrer"},Ce=e("td",{style:{"text-align":"left"}},"enforce sorted interface properties",-1),Ee=e("td",{style:{"text-align":"left"}},"üîß",-1),Te={style:{"text-align":"left"}},Pe={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-jsx-props",target:"_blank",rel:"noopener noreferrer"},Ie=e("td",{style:{"text-align":"left"}},"enforce sorted JSX props",-1),Ne=e("td",{style:{"text-align":"left"}},"üîß",-1),Ve={style:{"text-align":"left"}},Ae={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-maps",target:"_blank",rel:"noopener noreferrer"},Fe=e("td",{style:{"text-align":"left"}},"enforce sorted Map elements",-1),Be=e("td",{style:{"text-align":"left"}},"üîß",-1),We={style:{"text-align":"left"}},Me={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-named-exports",target:"_blank",rel:"noopener noreferrer"},Re=e("td",{style:{"text-align":"left"}},"enforce sorted named exports",-1),De=e("td",{style:{"text-align":"left"}},"üîß",-1),Je={style:{"text-align":"left"}},Xe={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-named-imports",target:"_blank",rel:"noopener noreferrer"},Ge=e("td",{style:{"text-align":"left"}},"enforce sorted named imports",-1),He=e("td",{style:{"text-align":"left"}},"üîß",-1),Ue={style:{"text-align":"left"}},Ye={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-object-types",target:"_blank",rel:"noopener noreferrer"},Oe=e("td",{style:{"text-align":"left"}},"enforce sorted object types",-1),Qe=e("td",{style:{"text-align":"left"}},"üîß",-1),Ke={style:{"text-align":"left"}},Ze={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-objects",target:"_blank",rel:"noopener noreferrer"},$e=e("td",{style:{"text-align":"left"}},"enforce sorted objects",-1),et=e("td",{style:{"text-align":"left"}},"üîß",-1),tt={style:{"text-align":"left"}},nt={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-svelte-attributes",target:"_blank",rel:"noopener noreferrer"},st=e("td",{style:{"text-align":"left"}},"enforce sorted Svelte attributes",-1),at=e("td",{style:{"text-align":"left"}},"üîß",-1),ot={style:{"text-align":"left"}},it={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-union-types",target:"_blank",rel:"noopener noreferrer"},rt=e("td",{style:{"text-align":"left"}},"enforce sorted union types",-1),lt=e("td",{style:{"text-align":"left"}},"üîß",-1),ct={style:{"text-align":"left"}},pt={href:"https://eslint-plugin-perfectionist.azat.io/rules/sort-vue-attributes",target:"_blank",rel:"noopener noreferrer"},dt=e("td",{style:{"text-align":"left"}},"enforce sorted Vue attributes",-1),ut=e("td",{style:{"text-align":"left"}},"üîß",-1),ht=e("h2",{id:"Ô∏è-faq",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#Ô∏è-faq","aria-hidden":"true"},"#"),t(" ‚ÅâÔ∏è FAQ")],-1),gt=e("h3",{id:"can-i-automatically-fix-problems-in-the-editor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#can-i-automatically-fix-problems-in-the-editor","aria-hidden":"true"},"#"),t(" Can I automatically fix problems in the editor?")],-1),ft={href:"https://eslint-plugin-perfectionist.azat.io/guide/integrations",target:"_blank",rel:"noopener noreferrer"},_t=e("h3",{id:"is-it-safety",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#is-it-safety","aria-hidden":"true"},"#"),t(" Is it safety?")],-1),mt=e("code",null,"*",-1),bt={href:"https://github.com/azat-io/eslint-plugin-perfectionist/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},vt=e("h3",{id:"why-not-prettier",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#why-not-prettier","aria-hidden":"true"},"#"),t(" Why not Prettier?")],-1),kt={href:"https://blog.joshuakgoldberg.com/the-blurry-line-between-formatting-and-style",target:"_blank",rel:"noopener noreferrer"},yt=e("strong",null,"@joshuakgoldberg",-1),xt=e("h2",{id:"‚ö†Ô∏è-troubleshooting",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#‚ö†Ô∏è-troubleshooting","aria-hidden":"true"},"#"),t(" ‚ö†Ô∏è Troubleshooting")],-1),qt={href:"https://eslint.org/docs/latest/use/configure/rules#using-configuration-files-1",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://eslint-plugin-perfectionist.azat.io",target:"_blank",rel:"noopener noreferrer"},wt=a(`<details><summary>Possible conflicts</summary><p><strong>perfectionist/sort-imports:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;import/order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sort-imports&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>perfectionist/sort-interfaces:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;@typescript-eslint/adjacent-overload-signatures&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>perfectionist/sort-jsx-props:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;react/jsx-sort-props&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>perfectionist/sort-named-imports:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;sort-imports&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>perfectionist/sort-object-types:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;@typescript-eslint/adjacent-overload-signatures&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>perfectionist/sort-objects:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;sort-keys&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>perfectionist/sort-union-types:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;@typescript-eslint/sort-type-constituents&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="üö•-versioning-policy" tabindex="-1"><a class="header-anchor" href="#üö•-versioning-policy" aria-hidden="true">#</a> üö• Versioning Policy</h2>`,2),St={href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://github.com/eslint/eslint#semantic-versioning-policy",target:"_blank",rel:"noopener noreferrer"},Lt=e("h2",{id:"‚ù§Ô∏è-contributing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#‚ù§Ô∏è-contributing","aria-hidden":"true"},"#"),t(" ‚ù§Ô∏è Contributing")],-1),Ct={href:"https://github.com/azat-io/eslint-plugin-perfectionist/blob/main/contributing.md",target:"_blank",rel:"noopener noreferrer"},Et=e("h2",{id:"üëÅ-see-also",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#üëÅ-see-also","aria-hidden":"true"},"#"),t(" üëÅ See Also")],-1),Tt={href:"https://github.com/azat-io/eslint-config",target:"_blank",rel:"noopener noreferrer"},Pt=e("code",null,"@azat-io/eslint-config",-1),It=e("h2",{id:"üîí-license",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#üîí-license","aria-hidden":"true"},"#"),t(" üîí License")],-1),Nt={href:"https://azat.io",target:"_blank",rel:"noopener noreferrer"};function Vt(At,Ft){const n=r("ExternalLinkIcon");return l(),c("div",null,[d,u,e("p",null,[e("a",h,[g,s(n)]),e("a",f,[_,s(n)])]),m,e("p",null,[t("See "),e("a",b,[t("docs"),s(n)]),t(".")]),v,k,e("p",null,[t("You'll first need to install "),e("a",y,[t("ESLint"),s(n)]),t(":")]),x,e("h3",q,[j,t(" Legacy Config ("),e("a",w,[S,s(n)]),t(")")]),o(" prettier-ignore "),z,e("h3",L,[C,t(" Flat Config ("),e("a",E,[T,s(n)]),t(") (requires eslint >= v8.23.0)")]),P,e("h3",I,[N,t(" Legacy Config ("),e("a",V,[A,s(n)]),t(")")]),o(" prettier-ignore "),F,e("h3",B,[W,t(" Flat Config ("),e("a",M,[R,s(n)]),t(")")]),o(" prettier-ignore "),D,e("table",null,[J,e("tbody",null,[e("tr",null,[e("td",X,[e("a",G,[t("recommended-alphabetical"),s(n)])]),H]),e("tr",null,[e("td",U,[e("a",Y,[t("recommended-natural"),s(n)])]),O]),e("tr",null,[e("td",Q,[e("a",K,[t("recommended-line-length"),s(n)])]),Z])])]),$,o(" begin auto-generated rules list "),e("p",null,[t("üîß Automatically fixable by the "),e("a",ee,[te,t(" CLI option"),s(n)]),t(".")]),e("table",null,[ne,e("tbody",null,[e("tr",null,[e("td",se,[e("a",ae,[t("sort-array-includes"),s(n)])]),oe,ie]),e("tr",null,[e("td",re,[e("a",le,[t("sort-astro-attributes"),s(n)])]),ce,pe]),e("tr",null,[e("td",de,[e("a",ue,[t("sort-classes"),s(n)])]),he,ge]),e("tr",null,[e("td",fe,[e("a",_e,[t("sort-enums"),s(n)])]),me,be]),e("tr",null,[e("td",ve,[e("a",ke,[t("sort-exports"),s(n)])]),ye,xe]),e("tr",null,[e("td",qe,[e("a",je,[t("sort-imports"),s(n)])]),we,Se]),e("tr",null,[e("td",ze,[e("a",Le,[t("sort-interfaces"),s(n)])]),Ce,Ee]),e("tr",null,[e("td",Te,[e("a",Pe,[t("sort-jsx-props"),s(n)])]),Ie,Ne]),e("tr",null,[e("td",Ve,[e("a",Ae,[t("sort-maps"),s(n)])]),Fe,Be]),e("tr",null,[e("td",We,[e("a",Me,[t("sort-named-exports"),s(n)])]),Re,De]),e("tr",null,[e("td",Je,[e("a",Xe,[t("sort-named-imports"),s(n)])]),Ge,He]),e("tr",null,[e("td",Ue,[e("a",Ye,[t("sort-object-types"),s(n)])]),Oe,Qe]),e("tr",null,[e("td",Ke,[e("a",Ze,[t("sort-objects"),s(n)])]),$e,et]),e("tr",null,[e("td",tt,[e("a",nt,[t("sort-svelte-attributes"),s(n)])]),st,at]),e("tr",null,[e("td",ot,[e("a",it,[t("sort-union-types"),s(n)])]),rt,lt]),e("tr",null,[e("td",ct,[e("a",pt,[t("sort-vue-attributes"),s(n)])]),dt,ut])])]),o(" end auto-generated rules list "),ht,gt,e("p",null,[t("Yes. To do this, you need to enable autofix in ESLint when you save the file in your editor. Instructions for your editor can be found "),e("a",ft,[t("here"),s(n)]),t(".")]),_t,e("p",null,[t("On the whole, yes. We are very careful to make sure that the work of the plugin does not negatively affect the work of the code. For example, the plugin takes into account spread operators in JSX and objects, comments to the code, exports with "),mt,t(". Safety is our priority. If you encounter any problem, you can create an "),e("a",bt,[t("issue"),s(n)]),t(".")]),vt,e("p",null,[t("I love Prettier. However, this is not his area of responsibility. Prettier is used for formatting, and ESLint is also used for styling. For example, changing the order of imports can affect how the code works (console.log calls, fetch, style loading). Prettier should not change the AST. There is a cool article about this: "),e("a",kt,[t('"The Blurry Line Between Formatting and Style"'),s(n)]),t(" by "),yt,t(".")]),xt,e("p",null,[t("There are rules of ESLint and other ESLint plugins that may conflict with the rules of ESLint Plugin Perfectionist. We strongly recommend that you "),e("a",qt,[t("disable rules"),s(n)]),t(" with similar functionality.")]),e("p",null,[t("I recommend that you read the "),e("a",jt,[t("documentation"),s(n)]),t(" before using any rules.")]),wt,e("p",null,[t("This plugin is following "),e("a",St,[t("Semantic Versioning"),s(n)]),t(" and "),e("a",zt,[t("ESLint's Semantic Versioning Policy"),s(n)]),t(".")]),Lt,e("p",null,[t("See "),e("a",Ct,[t("Contributing Guide"),s(n)]),t(".")]),Et,e("ul",null,[e("li",null,[e("a",Tt,[Pt,s(n)]),t(" - Collection of ESLint configs")])]),It,e("p",null,[t("MIT ¬© "),e("a",Nt,[t("Azat S."),s(n)])])])}const Wt=i(p,[["render",Vt],["__file","index.html.vue"]]);export{Wt as default};
