import{_ as r,r as d,o as c,c as u,d as t,e,a as n,f as i,w as l,b as a}from"./app-IEn2CkPT.js";const p={},_={id:"eslint-plugin-unicorn",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#eslint-plugin-unicorn","aria-hidden":"true"},"#",-1),g={href:"https://codecov.io/gh/sindresorhus/eslint-plugin-unicorn/branch/main",target:"_blank",rel:"noopener noreferrer"},h=t("img",{src:"https://codecov.io/gh/sindresorhus/eslint-plugin-unicorn/branch/main/graph/badge.svg",alt:"Coverage Status"},null,-1),y={href:"https://npmjs.com/package/eslint-plugin-unicorn",target:"_blank",rel:"noopener noreferrer"},m=t("img",{src:"https://img.shields.io/npm/v/eslint-plugin-unicorn.svg?style=flat",alt:"npm version"},null,-1),x=t("img",{src:"https://cloud.githubusercontent.com/assets/170270/18659176/1cc373d0-7f33-11e6-890f-0ba35362ee7e.jpg",width:"180",align:"right",alt:"Unicorn"},null,-1),v=t("blockquote",null,[t("p",null,"More than 100 powerful ESLint rules")],-1),k={href:"https://github.com/xojs/xo",target:"_blank",rel:"noopener noreferrer"},b=t("strong",null,"Propose or contribute a new rule ➡",-1),w=a(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint eslint-plugin-unicorn
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="usage-eslint-config-js" tabindex="-1"><a class="header-anchor" href="#usage-eslint-config-js" aria-hidden="true">#</a> Usage (<code>eslint.config.js</code>)</h2><p><strong>Requires ESLint <code>&gt;=8.23.0</code>.</strong></p><p>Use a <a href="#preset-configs-eslintconfigjs">preset config</a> or configure each rule in <code>eslint.config.js</code>.</p><p>If you don&#39;t use the preset, ensure you use the same <code>languageOptions</code> config as below.</p><h3 id="es-module-recommended" tabindex="-1"><a class="header-anchor" href="#es-module-recommended" aria-hidden="true">#</a> ES Module (Recommended)</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> eslintPluginUnicorn <span class="token keyword">from</span> <span class="token string">&#39;eslint-plugin-unicorn&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> eslintrc <span class="token keyword">from</span> <span class="token string">&#39;@eslint/eslintrc&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
	<span class="token punctuation">{</span>
		<span class="token literal-property property">languageOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">globals</span><span class="token operator">:</span> eslintrc<span class="token punctuation">.</span>Legacy<span class="token punctuation">.</span>environments<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;es2024&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">unicorn</span><span class="token operator">:</span> eslintPluginUnicorn<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token string-property property">&#39;unicorn/better-regex&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
			<span class="token string-property property">&#39;unicorn/…&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token comment">// …</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commonjs" tabindex="-1"><a class="header-anchor" href="#commonjs" aria-hidden="true">#</a> CommonJS</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> eslintPluginUnicorn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-plugin-unicorn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> eslintrc <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@eslint/eslintrc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">[</span>
	<span class="token punctuation">{</span>
		<span class="token literal-property property">languageOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">globals</span><span class="token operator">:</span> eslintrc<span class="token punctuation">.</span>Legacy<span class="token punctuation">.</span>environments<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;es2024&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">unicorn</span><span class="token operator">:</span> eslintPluginUnicorn<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token string-property property">&#39;unicorn/better-regex&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
			<span class="token string-property property">&#39;unicorn/…&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token comment">// …</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usage-legacy-eslintrc-or-package-json" tabindex="-1"><a class="header-anchor" href="#usage-legacy-eslintrc-or-package-json" aria-hidden="true">#</a> Usage (legacy: <code>.eslintrc.*</code> or <code>package.json</code>)</h2><p>Use a <a href="#preset-configs-eslintrc-or-packagejson">preset config</a> or configure each rule in <code>package.json</code>.</p><p>If you don&#39;t use the preset, ensure you use the same <code>env</code> and <code>parserOptions</code> config as below.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-awesome-project&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;eslintConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;es2024&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;parserOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;ecmaVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;latest&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;sourceType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token string">&quot;unicorn&quot;</span>
		<span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;unicorn/better-regex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;unicorn/…&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rules" tabindex="-1"><a class="header-anchor" href="#rules" aria-hidden="true">#</a> Rules</h2>`,15),q={href:"https://github.com/sindresorhus/eslint-plugin-unicorn#preset-configs",target:"_blank",rel:"noopener noreferrer"},j=t("br",null,null,-1),P=t("code",null,"recommended",-1),E={href:"https://github.com/sindresorhus/eslint-plugin-unicorn#preset-configs",target:"_blank",rel:"noopener noreferrer"},S=t("br",null,null,-1),D={href:"https://eslint.org/docs/user-guide/command-line-interface#--fix",target:"_blank",rel:"noopener noreferrer"},A=t("code",null,"--fix",-1),C=t("br",null,null,-1),R={href:"https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions",target:"_blank",rel:"noopener noreferrer"},N=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Description"),t("th",{style:{"text-align":"left"}},"💼"),t("th",{style:{"text-align":"left"}},"🔧"),t("th",{style:{"text-align":"left"}},"💡")])],-1),U={style:{"text-align":"left"}},B=t("td",{style:{"text-align":"left"}},"Improve regexes by making them shorter, consistent, and safer.",-1),L=t("td",{style:{"text-align":"left"}},"✅",-1),I=t("td",{style:{"text-align":"left"}},"🔧",-1),M=t("td",{style:{"text-align":"left"}},null,-1),O={style:{"text-align":"left"}},T=t("td",{style:{"text-align":"left"}},"Enforce a specific parameter name in catch clauses.",-1),F=t("td",{style:{"text-align":"left"}},"✅",-1),V=t("td",{style:{"text-align":"left"}},"🔧",-1),z=t("td",{style:{"text-align":"left"}},null,-1),J={style:{"text-align":"left"}},W=t("td",{style:{"text-align":"left"}},"Use destructured variables over properties.",-1),K=t("td",{style:{"text-align":"left"}},null,-1),H=t("td",{style:{"text-align":"left"}},"🔧",-1),X=t("td",{style:{"text-align":"left"}},"💡",-1),Y={style:{"text-align":"left"}},G=t("td",{style:{"text-align":"left"}},"Move function definitions to the highest possible scope.",-1),Q=t("td",{style:{"text-align":"left"}},"✅",-1),Z=t("td",{style:{"text-align":"left"}},null,-1),$=t("td",{style:{"text-align":"left"}},null,-1),tt={style:{"text-align":"left"}},et=t("td",{style:{"text-align":"left"}},[e("Enforce correct "),t("code",null,"Error"),e(" subclassing.")],-1),nt=t("td",{style:{"text-align":"left"}},null,-1),st=t("td",{style:{"text-align":"left"}},"🔧",-1),lt=t("td",{style:{"text-align":"left"}},null,-1),ot={style:{"text-align":"left"}},it=t("td",{style:{"text-align":"left"}},"Enforce no spaces between braces.",-1),at=t("td",{style:{"text-align":"left"}},"✅",-1),dt=t("td",{style:{"text-align":"left"}},"🔧",-1),rt=t("td",{style:{"text-align":"left"}},null,-1),ct={style:{"text-align":"left"}},ut=t("td",{style:{"text-align":"left"}},[e("Enforce passing a "),t("code",null,"message"),e(" value when creating a built-in error.")],-1),pt=t("td",{style:{"text-align":"left"}},"✅",-1),_t=t("td",{style:{"text-align":"left"}},null,-1),ft=t("td",{style:{"text-align":"left"}},null,-1),gt={style:{"text-align":"left"}},ht=t("td",{style:{"text-align":"left"}},"Require escape sequences to use uppercase values.",-1),yt=t("td",{style:{"text-align":"left"}},"✅",-1),mt=t("td",{style:{"text-align":"left"}},"🔧",-1),xt=t("td",{style:{"text-align":"left"}},null,-1),vt={style:{"text-align":"left"}},kt=t("td",{style:{"text-align":"left"}},"Add expiration conditions to TODO comments.",-1),bt=t("td",{style:{"text-align":"left"}},"✅",-1),wt=t("td",{style:{"text-align":"left"}},null,-1),qt=t("td",{style:{"text-align":"left"}},null,-1),jt={style:{"text-align":"left"}},Pt=t("td",{style:{"text-align":"left"}},[e("Enforce explicitly comparing the "),t("code",null,"length"),e(" or "),t("code",null,"size"),e(" property of a value.")],-1),Et=t("td",{style:{"text-align":"left"}},"✅",-1),St=t("td",{style:{"text-align":"left"}},"🔧",-1),Dt=t("td",{style:{"text-align":"left"}},"💡",-1),At={style:{"text-align":"left"}},Ct=t("td",{style:{"text-align":"left"}},"Enforce a case style for filenames.",-1),Rt=t("td",{style:{"text-align":"left"}},"✅",-1),Nt=t("td",{style:{"text-align":"left"}},null,-1),Ut=t("td",{style:{"text-align":"left"}},null,-1),Bt={style:{"text-align":"left"}},Lt=t("td",{style:{"text-align":"left"}},"Enforce specific import styles per module.",-1),It=t("td",{style:{"text-align":"left"}},"✅",-1),Mt=t("td",{style:{"text-align":"left"}},null,-1),Ot=t("td",{style:{"text-align":"left"}},null,-1),Tt={style:{"text-align":"left"}},Ft=t("td",{style:{"text-align":"left"}},[e("Enforce the use of "),t("code",null,"new"),e(" for all builtins, except "),t("code",null,"String"),e(", "),t("code",null,"Number"),e(", "),t("code",null,"Boolean"),e(", "),t("code",null,"Symbol"),e(" and "),t("code",null,"BigInt"),e(".")],-1),Vt=t("td",{style:{"text-align":"left"}},"✅",-1),zt=t("td",{style:{"text-align":"left"}},"🔧",-1),Jt=t("td",{style:{"text-align":"left"}},null,-1),Wt={style:{"text-align":"left"}},Kt=t("td",{style:{"text-align":"left"}},[e("Enforce specifying rules to disable in "),t("code",null,"eslint-disable"),e(" comments.")],-1),Ht=t("td",{style:{"text-align":"left"}},"✅",-1),Xt=t("td",{style:{"text-align":"left"}},null,-1),Yt=t("td",{style:{"text-align":"left"}},null,-1),Gt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"left"}},"Prevent passing a function reference directly to iterator methods.",-1),Zt=t("td",{style:{"text-align":"left"}},"✅",-1),$t=t("td",{style:{"text-align":"left"}},null,-1),te=t("td",{style:{"text-align":"left"}},"💡",-1),ee={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"for…of"),e(" over the "),t("code",null,"forEach"),e(" method.")],-1),se=t("td",{style:{"text-align":"left"}},"✅",-1),le=t("td",{style:{"text-align":"left"}},"🔧",-1),oe=t("td",{style:{"text-align":"left"}},"💡",-1),ie={style:{"text-align":"left"}},ae=t("td",{style:{"text-align":"left"}},[e("Disallow using the "),t("code",null,"this"),e(" argument in array methods.")],-1),de=t("td",{style:{"text-align":"left"}},"✅",-1),re=t("td",{style:{"text-align":"left"}},"🔧",-1),ce=t("td",{style:{"text-align":"left"}},"💡",-1),ue={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"left"}},[e("Enforce combining multiple "),t("code",null,"Array#push()"),e(" into one call.")],-1),_e=t("td",{style:{"text-align":"left"}},"✅",-1),fe=t("td",{style:{"text-align":"left"}},"🔧",-1),ge=t("td",{style:{"text-align":"left"}},"💡",-1),he={style:{"text-align":"left"}},ye=t("td",{style:{"text-align":"left"}},[e("Disallow "),t("code",null,"Array#reduce()"),e(" and "),t("code",null,"Array#reduceRight()"),e(".")],-1),me=t("td",{style:{"text-align":"left"}},"✅",-1),xe=t("td",{style:{"text-align":"left"}},null,-1),ve=t("td",{style:{"text-align":"left"}},null,-1),ke={style:{"text-align":"left"}},be=t("td",{style:{"text-align":"left"}},"Disallow member access from await expression.",-1),we=t("td",{style:{"text-align":"left"}},"✅",-1),qe=t("td",{style:{"text-align":"left"}},"🔧",-1),je=t("td",{style:{"text-align":"left"}},null,-1),Pe={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"left"}},[e("Do not use leading/trailing space between "),t("code",null,"console.log"),e(" parameters.")],-1),Se=t("td",{style:{"text-align":"left"}},"✅",-1),De=t("td",{style:{"text-align":"left"}},"🔧",-1),Ae=t("td",{style:{"text-align":"left"}},null,-1),Ce={style:{"text-align":"left"}},Re=t("td",{style:{"text-align":"left"}},[e("Do not use "),t("code",null,"document.cookie"),e(" directly.")],-1),Ne=t("td",{style:{"text-align":"left"}},"✅",-1),Ue=t("td",{style:{"text-align":"left"}},null,-1),Be=t("td",{style:{"text-align":"left"}},null,-1),Le={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"left"}},"Disallow empty files.",-1),Me=t("td",{style:{"text-align":"left"}},"✅",-1),Oe=t("td",{style:{"text-align":"left"}},null,-1),Te=t("td",{style:{"text-align":"left"}},null,-1),Fe={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"left"}},[e("Do not use a "),t("code",null,"for"),e(" loop that can be replaced with a "),t("code",null,"for-of"),e(" loop.")],-1),ze=t("td",{style:{"text-align":"left"}},"✅",-1),Je=t("td",{style:{"text-align":"left"}},"🔧",-1),We=t("td",{style:{"text-align":"left"}},"💡",-1),Ke={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"left"}},"Enforce the use of Unicode escapes instead of hexadecimal escapes.",-1),Xe=t("td",{style:{"text-align":"left"}},"✅",-1),Ye=t("td",{style:{"text-align":"left"}},"🔧",-1),Ge=t("td",{style:{"text-align":"left"}},null,-1),Qe={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"left"}},[e("Require "),t("code",null,"Array.isArray()"),e(" instead of "),t("code",null,"instanceof Array"),e(".")],-1),$e=t("td",{style:{"text-align":"left"}},"✅",-1),tn=t("td",{style:{"text-align":"left"}},"🔧",-1),en=t("td",{style:{"text-align":"left"}},null,-1),nn={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"left"}},[e("Prevent calling "),t("code",null,"EventTarget#removeEventListener()"),e(" with the result of an expression.")],-1),ln=t("td",{style:{"text-align":"left"}},"✅",-1),on=t("td",{style:{"text-align":"left"}},null,-1),an=t("td",{style:{"text-align":"left"}},null,-1),dn={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"left"}},[e("Disallow identifiers starting with "),t("code",null,"new"),e(" or "),t("code",null,"class"),e(".")],-1),cn=t("td",{style:{"text-align":"left"}},null,-1),un=t("td",{style:{"text-align":"left"}},null,-1),pn=t("td",{style:{"text-align":"left"}},null,-1),_n={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"left"}},[e("Disallow "),t("code",null,"if"),e(" statements as the only statement in "),t("code",null,"if"),e(" blocks without "),t("code",null,"else"),e(".")],-1),gn=t("td",{style:{"text-align":"left"}},"✅",-1),hn=t("td",{style:{"text-align":"left"}},"🔧",-1),yn=t("td",{style:{"text-align":"left"}},null,-1),mn={style:{"text-align":"left"}},xn=t("td",{style:{"text-align":"left"}},"Disallow negated conditions.",-1),vn=t("td",{style:{"text-align":"left"}},"✅",-1),kn=t("td",{style:{"text-align":"left"}},"🔧",-1),bn=t("td",{style:{"text-align":"left"}},null,-1),wn={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"left"}},"Disallow nested ternary expressions.",-1),jn=t("td",{style:{"text-align":"left"}},"✅",-1),Pn=t("td",{style:{"text-align":"left"}},"🔧",-1),En=t("td",{style:{"text-align":"left"}},null,-1),Sn={style:{"text-align":"left"}},Dn=t("td",{style:{"text-align":"left"}},[e("Disallow "),t("code",null,"new Array()"),e(".")],-1),An=t("td",{style:{"text-align":"left"}},"✅",-1),Cn=t("td",{style:{"text-align":"left"}},"🔧",-1),Rn=t("td",{style:{"text-align":"left"}},"💡",-1),Nn={style:{"text-align":"left"}},Un=t("td",{style:{"text-align":"left"}},[e("Enforce the use of "),t("code",null,"Buffer.from()"),e(" and "),t("code",null,"Buffer.alloc()"),e(" instead of the deprecated "),t("code",null,"new Buffer()"),e(".")],-1),Bn=t("td",{style:{"text-align":"left"}},"✅",-1),Ln=t("td",{style:{"text-align":"left"}},"🔧",-1),In=t("td",{style:{"text-align":"left"}},"💡",-1),Mn={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"left"}},[e("Disallow the use of the "),t("code",null,"null"),e(" literal.")],-1),Tn=t("td",{style:{"text-align":"left"}},"✅",-1),Fn=t("td",{style:{"text-align":"left"}},"🔧",-1),Vn=t("td",{style:{"text-align":"left"}},"💡",-1),zn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"left"}},"Disallow the use of objects as default parameters.",-1),Wn=t("td",{style:{"text-align":"left"}},"✅",-1),Kn=t("td",{style:{"text-align":"left"}},null,-1),Hn=t("td",{style:{"text-align":"left"}},null,-1),Xn={style:{"text-align":"left"}},Yn=t("td",{style:{"text-align":"left"}},[e("Disallow "),t("code",null,"process.exit()"),e(".")],-1),Gn=t("td",{style:{"text-align":"left"}},"✅",-1),Qn=t("td",{style:{"text-align":"left"}},null,-1),Zn=t("td",{style:{"text-align":"left"}},null,-1),$n={style:{"text-align":"left"}},ts=t("td",{style:{"text-align":"left"}},"Disallow classes that only have static members.",-1),es=t("td",{style:{"text-align":"left"}},"✅",-1),ns=t("td",{style:{"text-align":"left"}},"🔧",-1),ss=t("td",{style:{"text-align":"left"}},null,-1),ls={style:{"text-align":"left"}},os=t("td",{style:{"text-align":"left"}},[e("Disallow "),t("code",null,"then"),e(" property.")],-1),is=t("td",{style:{"text-align":"left"}},"✅",-1),as=t("td",{style:{"text-align":"left"}},null,-1),ds=t("td",{style:{"text-align":"left"}},null,-1),rs={style:{"text-align":"left"}},cs=t("td",{style:{"text-align":"left"}},[e("Disallow assigning "),t("code",null,"this"),e(" to a variable.")],-1),us=t("td",{style:{"text-align":"left"}},"✅",-1),ps=t("td",{style:{"text-align":"left"}},null,-1),_s=t("td",{style:{"text-align":"left"}},null,-1),fs={style:{"text-align":"left"}},gs=t("td",{style:{"text-align":"left"}},[e("Disallow comparing "),t("code",null,"undefined"),e(" using "),t("code",null,"typeof"),e(".")],-1),hs=t("td",{style:{"text-align":"left"}},"✅",-1),ys=t("td",{style:{"text-align":"left"}},"🔧",-1),ms=t("td",{style:{"text-align":"left"}},"💡",-1),xs={style:{"text-align":"left"}},vs=t("td",{style:{"text-align":"left"}},"Disallow awaiting non-promise values.",-1),ks=t("td",{style:{"text-align":"left"}},"✅",-1),bs=t("td",{style:{"text-align":"left"}},"🔧",-1),ws=t("td",{style:{"text-align":"left"}},null,-1),qs={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"left"}},"Enforce the use of built-in methods instead of unnecessary polyfills.",-1),Ps=t("td",{style:{"text-align":"left"}},"✅",-1),Es=t("td",{style:{"text-align":"left"}},null,-1),Ss=t("td",{style:{"text-align":"left"}},null,-1),Ds={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"left"}},"Disallow unreadable array destructuring.",-1),Cs=t("td",{style:{"text-align":"left"}},"✅",-1),Rs=t("td",{style:{"text-align":"left"}},"🔧",-1),Ns=t("td",{style:{"text-align":"left"}},null,-1),Us={style:{"text-align":"left"}},Bs=t("td",{style:{"text-align":"left"}},"Disallow unreadable IIFEs.",-1),Ls=t("td",{style:{"text-align":"left"}},"✅",-1),Is=t("td",{style:{"text-align":"left"}},null,-1),Ms=t("td",{style:{"text-align":"left"}},null,-1),Os={style:{"text-align":"left"}},Ts=t("td",{style:{"text-align":"left"}},"Disallow unused object properties.",-1),Fs=t("td",{style:{"text-align":"left"}},null,-1),Vs=t("td",{style:{"text-align":"left"}},null,-1),zs=t("td",{style:{"text-align":"left"}},null,-1),Js={style:{"text-align":"left"}},Ws=t("td",{style:{"text-align":"left"}},"Disallow useless fallback when spreading in object literals.",-1),Ks=t("td",{style:{"text-align":"left"}},"✅",-1),Hs=t("td",{style:{"text-align":"left"}},"🔧",-1),Xs=t("td",{style:{"text-align":"left"}},null,-1),Ys={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"left"}},"Disallow useless array length check.",-1),Qs=t("td",{style:{"text-align":"left"}},"✅",-1),Zs=t("td",{style:{"text-align":"left"}},"🔧",-1),$s=t("td",{style:{"text-align":"left"}},null,-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"left"}},[e("Disallow returning/yielding "),t("code",null,"Promise.resolve/reject()"),e(" in async functions or promise callbacks")],-1),nl=t("td",{style:{"text-align":"left"}},"✅",-1),sl=t("td",{style:{"text-align":"left"}},"🔧",-1),ll=t("td",{style:{"text-align":"left"}},null,-1),ol={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"left"}},"Disallow unnecessary spread.",-1),al=t("td",{style:{"text-align":"left"}},"✅",-1),dl=t("td",{style:{"text-align":"left"}},"🔧",-1),rl=t("td",{style:{"text-align":"left"}},null,-1),cl={style:{"text-align":"left"}},ul=t("td",{style:{"text-align":"left"}},"Disallow useless case in switch statements.",-1),pl=t("td",{style:{"text-align":"left"}},"✅",-1),_l=t("td",{style:{"text-align":"left"}},null,-1),fl=t("td",{style:{"text-align":"left"}},"💡",-1),gl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"left"}},[e("Disallow useless "),t("code",null,"undefined"),e(".")],-1),yl=t("td",{style:{"text-align":"left"}},"✅",-1),ml=t("td",{style:{"text-align":"left"}},"🔧",-1),xl=t("td",{style:{"text-align":"left"}},null,-1),vl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"left"}},"Disallow number literals with zero fractions or dangling dots.",-1),bl=t("td",{style:{"text-align":"left"}},"✅",-1),wl=t("td",{style:{"text-align":"left"}},"🔧",-1),ql=t("td",{style:{"text-align":"left"}},null,-1),jl={style:{"text-align":"left"}},Pl=t("td",{style:{"text-align":"left"}},"Enforce proper case for numeric literals.",-1),El=t("td",{style:{"text-align":"left"}},"✅",-1),Sl=t("td",{style:{"text-align":"left"}},"🔧",-1),Dl=t("td",{style:{"text-align":"left"}},null,-1),Al={style:{"text-align":"left"}},Cl=t("td",{style:{"text-align":"left"}},"Enforce the style of numeric separators by correctly grouping digits.",-1),Rl=t("td",{style:{"text-align":"left"}},"✅",-1),Nl=t("td",{style:{"text-align":"left"}},"🔧",-1),Ul=t("td",{style:{"text-align":"left"}},null,-1),Bl={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".addEventListener()"),e(" and "),t("code",null,".removeEventListener()"),e(" over "),t("code",null,"on"),e("-functions.")],-1),Il=t("td",{style:{"text-align":"left"}},"✅",-1),Ml=t("td",{style:{"text-align":"left"}},"🔧",-1),Ol=t("td",{style:{"text-align":"left"}},null,-1),Tl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".find(…)"),e(" and "),t("code",null,".findLast(…)"),e(" over the first or last element from "),t("code",null,".filter(…)"),e(".")],-1),Vl=t("td",{style:{"text-align":"left"}},"✅",-1),zl=t("td",{style:{"text-align":"left"}},"🔧",-1),Jl=t("td",{style:{"text-align":"left"}},"💡",-1),Wl={style:{"text-align":"left"}},Kl=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"Array#flat()"),e(" over legacy techniques to flatten arrays.")],-1),Hl=t("td",{style:{"text-align":"left"}},"✅",-1),Xl=t("td",{style:{"text-align":"left"}},"🔧",-1),Yl=t("td",{style:{"text-align":"left"}},null,-1),Gl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".flatMap(…)"),e(" over "),t("code",null,".map(…).flat()"),e(".")],-1),Zl=t("td",{style:{"text-align":"left"}},"✅",-1),$l=t("td",{style:{"text-align":"left"}},"🔧",-1),to=t("td",{style:{"text-align":"left"}},null,-1),eo={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"Array#{indexOf,lastIndexOf}()"),e(" over "),t("code",null,"Array#{findIndex,findLastIndex}()"),e(" when looking for the index of an item.")],-1),so=t("td",{style:{"text-align":"left"}},"✅",-1),lo=t("td",{style:{"text-align":"left"}},"🔧",-1),oo=t("td",{style:{"text-align":"left"}},"💡",-1),io={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".some(…)"),e(" over "),t("code",null,".filter(…).length"),e(" check and "),t("code",null,".{find,findLast}(…)"),e(".")],-1),ro=t("td",{style:{"text-align":"left"}},"✅",-1),co=t("td",{style:{"text-align":"left"}},"🔧",-1),uo=t("td",{style:{"text-align":"left"}},"💡",-1),po={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".at()"),e(" method for index access and "),t("code",null,"String#charAt()"),e(".")],-1),fo=t("td",{style:{"text-align":"left"}},"✅",-1),go=t("td",{style:{"text-align":"left"}},"🔧",-1),ho=t("td",{style:{"text-align":"left"}},"💡",-1),yo={style:{"text-align":"left"}},mo=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"Blob#arrayBuffer()"),e(" over "),t("code",null,"FileReader#readAsArrayBuffer(…)"),e(" and "),t("code",null,"Blob#text()"),e(" over "),t("code",null,"FileReader#readAsText(…)"),e(".")],-1),xo=t("td",{style:{"text-align":"left"}},"✅",-1),vo=t("td",{style:{"text-align":"left"}},null,-1),ko=t("td",{style:{"text-align":"left"}},null,-1),bo={style:{"text-align":"left"}},wo=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"String#codePointAt(…)"),e(" over "),t("code",null,"String#charCodeAt(…)"),e(" and "),t("code",null,"String.fromCodePoint(…)"),e(" over "),t("code",null,"String.fromCharCode(…)"),e(".")],-1),qo=t("td",{style:{"text-align":"left"}},"✅",-1),jo=t("td",{style:{"text-align":"left"}},null,-1),Po=t("td",{style:{"text-align":"left"}},"💡",-1),Eo={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"Date.now()"),e(" to get the number of milliseconds since the Unix Epoch.")],-1),Do=t("td",{style:{"text-align":"left"}},"✅",-1),Ao=t("td",{style:{"text-align":"left"}},"🔧",-1),Co=t("td",{style:{"text-align":"left"}},null,-1),Ro={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"left"}},"Prefer default parameters over reassignment.",-1),Uo=t("td",{style:{"text-align":"left"}},"✅",-1),Bo=t("td",{style:{"text-align":"left"}},"🔧",-1),Lo=t("td",{style:{"text-align":"left"}},"💡",-1),Io={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"Node#append()"),e(" over "),t("code",null,"Node#appendChild()"),e(".")],-1),Oo=t("td",{style:{"text-align":"left"}},"✅",-1),To=t("td",{style:{"text-align":"left"}},"🔧",-1),Fo=t("td",{style:{"text-align":"left"}},null,-1),Vo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"left"}},[e("Prefer using "),t("code",null,".dataset"),e(" on DOM elements over calling attribute methods.")],-1),Jo=t("td",{style:{"text-align":"left"}},"✅",-1),Wo=t("td",{style:{"text-align":"left"}},"🔧",-1),Ko=t("td",{style:{"text-align":"left"}},null,-1),Ho={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"childNode.remove()"),e(" over "),t("code",null,"parentNode.removeChild(childNode)"),e(".")],-1),Yo=t("td",{style:{"text-align":"left"}},"✅",-1),Go=t("td",{style:{"text-align":"left"}},"🔧",-1),Qo=t("td",{style:{"text-align":"left"}},"💡",-1),Zo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".textContent"),e(" over "),t("code",null,".innerText"),e(".")],-1),ti=t("td",{style:{"text-align":"left"}},"✅",-1),ei=t("td",{style:{"text-align":"left"}},null,-1),ni=t("td",{style:{"text-align":"left"}},"💡",-1),si={style:{"text-align":"left"}},li=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"EventTarget"),e(" over "),t("code",null,"EventEmitter"),e(".")],-1),oi=t("td",{style:{"text-align":"left"}},"✅",-1),ii=t("td",{style:{"text-align":"left"}},null,-1),ai=t("td",{style:{"text-align":"left"}},null,-1),di={style:{"text-align":"left"}},ri=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"export…from"),e(" when re-exporting.")],-1),ci=t("td",{style:{"text-align":"left"}},"✅",-1),ui=t("td",{style:{"text-align":"left"}},"🔧",-1),pi=t("td",{style:{"text-align":"left"}},"💡",-1),_i={style:{"text-align":"left"}},fi=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".includes()"),e(" over "),t("code",null,".indexOf()"),e(" and "),t("code",null,"Array#some()"),e(" when checking for existence or non-existence.")],-1),gi=t("td",{style:{"text-align":"left"}},"✅",-1),hi=t("td",{style:{"text-align":"left"}},"🔧",-1),yi=t("td",{style:{"text-align":"left"}},"💡",-1),mi={style:{"text-align":"left"}},xi=t("td",{style:{"text-align":"left"}},"Prefer reading a JSON file as a buffer.",-1),vi=t("td",{style:{"text-align":"left"}},null,-1),ki=t("td",{style:{"text-align":"left"}},"🔧",-1),bi=t("td",{style:{"text-align":"left"}},null,-1),wi={style:{"text-align":"left"}},qi=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"KeyboardEvent#key"),e(" over "),t("code",null,"KeyboardEvent#keyCode"),e(".")],-1),ji=t("td",{style:{"text-align":"left"}},"✅",-1),Pi=t("td",{style:{"text-align":"left"}},"🔧",-1),Ei=t("td",{style:{"text-align":"left"}},null,-1),Si={style:{"text-align":"left"}},Di=t("td",{style:{"text-align":"left"}},"Prefer using a logical operator over a ternary.",-1),Ai=t("td",{style:{"text-align":"left"}},"✅",-1),Ci=t("td",{style:{"text-align":"left"}},null,-1),Ri=t("td",{style:{"text-align":"left"}},"💡",-1),Ni={style:{"text-align":"left"}},Ui=t("td",{style:{"text-align":"left"}},[e("Enforce the use of "),t("code",null,"Math.trunc"),e(" instead of bitwise operators.")],-1),Bi=t("td",{style:{"text-align":"left"}},"✅",-1),Li=t("td",{style:{"text-align":"left"}},"🔧",-1),Ii=t("td",{style:{"text-align":"left"}},"💡",-1),Mi={style:{"text-align":"left"}},Oi=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".before()"),e(" over "),t("code",null,".insertBefore()"),e(", "),t("code",null,".replaceWith()"),e(" over "),t("code",null,".replaceChild()"),e(", prefer one of "),t("code",null,".before()"),e(", "),t("code",null,".after()"),e(", "),t("code",null,".append()"),e(" or "),t("code",null,".prepend()"),e(" over "),t("code",null,"insertAdjacentText()"),e(" and "),t("code",null,"insertAdjacentElement()"),e(".")],-1),Ti=t("td",{style:{"text-align":"left"}},"✅",-1),Fi=t("td",{style:{"text-align":"left"}},"🔧",-1),Vi=t("td",{style:{"text-align":"left"}},null,-1),zi={style:{"text-align":"left"}},Ji=t("td",{style:{"text-align":"left"}},[e("Prefer modern "),t("code",null,"Math"),e(" APIs over legacy patterns.")],-1),Wi=t("td",{style:{"text-align":"left"}},"✅",-1),Ki=t("td",{style:{"text-align":"left"}},"🔧",-1),Hi=t("td",{style:{"text-align":"left"}},null,-1),Xi={style:{"text-align":"left"}},Yi=t("td",{style:{"text-align":"left"}},"Prefer JavaScript modules (ESM) over CommonJS.",-1),Gi=t("td",{style:{"text-align":"left"}},"✅",-1),Qi=t("td",{style:{"text-align":"left"}},"🔧",-1),Zi=t("td",{style:{"text-align":"left"}},"💡",-1),$i={style:{"text-align":"left"}},ta=t("td",{style:{"text-align":"left"}},[e("Prefer using "),t("code",null,"String"),e(", "),t("code",null,"Number"),e(", "),t("code",null,"BigInt"),e(", "),t("code",null,"Boolean"),e(", and "),t("code",null,"Symbol"),e(" directly.")],-1),ea=t("td",{style:{"text-align":"left"}},"✅",-1),na=t("td",{style:{"text-align":"left"}},"🔧",-1),sa=t("td",{style:{"text-align":"left"}},null,-1),la={style:{"text-align":"left"}},oa=t("td",{style:{"text-align":"left"}},[e("Prefer negative index over "),t("code",null,".length - index"),e(" when possible.")],-1),ia=t("td",{style:{"text-align":"left"}},"✅",-1),aa=t("td",{style:{"text-align":"left"}},"🔧",-1),da=t("td",{style:{"text-align":"left"}},null,-1),ra={style:{"text-align":"left"}},ca=t("td",{style:{"text-align":"left"}},[e("Prefer using the "),t("code",null,"node:"),e(" protocol when importing Node.js builtin modules.")],-1),ua=t("td",{style:{"text-align":"left"}},"✅",-1),pa=t("td",{style:{"text-align":"left"}},"🔧",-1),_a=t("td",{style:{"text-align":"left"}},null,-1),fa={style:{"text-align":"left"}},ga=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"Number"),e(" static properties over global ones.")],-1),ha=t("td",{style:{"text-align":"left"}},"✅",-1),ya=t("td",{style:{"text-align":"left"}},"🔧",-1),ma=t("td",{style:{"text-align":"left"}},"💡",-1),xa={style:{"text-align":"left"}},va=t("td",{style:{"text-align":"left"}},[e("Prefer using "),t("code",null,"Object.fromEntries(…)"),e(" to transform a list of key-value pairs into an object.")],-1),ka=t("td",{style:{"text-align":"left"}},"✅",-1),ba=t("td",{style:{"text-align":"left"}},"🔧",-1),wa=t("td",{style:{"text-align":"left"}},null,-1),qa={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"left"}},[e("Prefer omitting the "),t("code",null,"catch"),e(" binding parameter.")],-1),Pa=t("td",{style:{"text-align":"left"}},"✅",-1),Ea=t("td",{style:{"text-align":"left"}},"🔧",-1),Sa=t("td",{style:{"text-align":"left"}},null,-1),Da={style:{"text-align":"left"}},Aa=t("td",{style:{"text-align":"left"}},"Prefer borrowing methods from the prototype instead of the instance.",-1),Ca=t("td",{style:{"text-align":"left"}},"✅",-1),Ra=t("td",{style:{"text-align":"left"}},"🔧",-1),Na=t("td",{style:{"text-align":"left"}},null,-1),Ua={style:{"text-align":"left"}},Ba=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,".querySelector()"),e(" over "),t("code",null,".getElementById()"),e(", "),t("code",null,".querySelectorAll()"),e(" over "),t("code",null,".getElementsByClassName()"),e(" and "),t("code",null,".getElementsByTagName()"),e(".")],-1),La=t("td",{style:{"text-align":"left"}},"✅",-1),Ia=t("td",{style:{"text-align":"left"}},"🔧",-1),Ma=t("td",{style:{"text-align":"left"}},null,-1),Oa={style:{"text-align":"left"}},Ta=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"Reflect.apply()"),e(" over "),t("code",null,"Function#apply()"),e(".")],-1),Fa=t("td",{style:{"text-align":"left"}},"✅",-1),Va=t("td",{style:{"text-align":"left"}},"🔧",-1),za=t("td",{style:{"text-align":"left"}},null,-1),Ja={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"RegExp#test()"),e(" over "),t("code",null,"String#match()"),e(" and "),t("code",null,"RegExp#exec()"),e(".")],-1),Ka=t("td",{style:{"text-align":"left"}},"✅",-1),Ha=t("td",{style:{"text-align":"left"}},"🔧",-1),Xa=t("td",{style:{"text-align":"left"}},"💡",-1),Ya={style:{"text-align":"left"}},Ga=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"Set#has()"),e(" over "),t("code",null,"Array#includes()"),e(" when checking for existence or non-existence.")],-1),Qa=t("td",{style:{"text-align":"left"}},"✅",-1),Za=t("td",{style:{"text-align":"left"}},"🔧",-1),$a=t("td",{style:{"text-align":"left"}},"💡",-1),td={style:{"text-align":"left"}},ed=t("td",{style:{"text-align":"left"}},[e("Prefer using "),t("code",null,"Set#size"),e(" instead of "),t("code",null,"Array#length"),e(".")],-1),nd=t("td",{style:{"text-align":"left"}},"✅",-1),sd=t("td",{style:{"text-align":"left"}},"🔧",-1),ld=t("td",{style:{"text-align":"left"}},null,-1),od={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"left"}},[e("Prefer the spread operator over "),t("code",null,"Array.from(…)"),e(", "),t("code",null,"Array#concat(…)"),e(", "),t("code",null,"Array#{slice,toSpliced}()"),e(" and "),t("code",null,"String#split('')"),e(".")],-1),ad=t("td",{style:{"text-align":"left"}},"✅",-1),dd=t("td",{style:{"text-align":"left"}},"🔧",-1),rd=t("td",{style:{"text-align":"left"}},"💡",-1),cd={style:{"text-align":"left"}},ud=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"String#replaceAll()"),e(" over regex searches with the global flag.")],-1),pd=t("td",{style:{"text-align":"left"}},"✅",-1),_d=t("td",{style:{"text-align":"left"}},"🔧",-1),fd=t("td",{style:{"text-align":"left"}},null,-1),gd={style:{"text-align":"left"}},hd=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"String#slice()"),e(" over "),t("code",null,"String#substr()"),e(" and "),t("code",null,"String#substring()"),e(".")],-1),yd=t("td",{style:{"text-align":"left"}},"✅",-1),md=t("td",{style:{"text-align":"left"}},"🔧",-1),xd=t("td",{style:{"text-align":"left"}},null,-1),vd={style:{"text-align":"left"}},kd=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"String#startsWith()"),e(" & "),t("code",null,"String#endsWith()"),e(" over "),t("code",null,"RegExp#test()"),e(".")],-1),bd=t("td",{style:{"text-align":"left"}},"✅",-1),wd=t("td",{style:{"text-align":"left"}},"🔧",-1),qd=t("td",{style:{"text-align":"left"}},"💡",-1),jd={style:{"text-align":"left"}},Pd=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"String#trimStart()"),e(" / "),t("code",null,"String#trimEnd()"),e(" over "),t("code",null,"String#trimLeft()"),e(" / "),t("code",null,"String#trimRight()"),e(".")],-1),Ed=t("td",{style:{"text-align":"left"}},"✅",-1),Sd=t("td",{style:{"text-align":"left"}},"🔧",-1),Dd=t("td",{style:{"text-align":"left"}},null,-1),Ad={style:{"text-align":"left"}},Cd=t("td",{style:{"text-align":"left"}},[e("Prefer "),t("code",null,"switch"),e(" over multiple "),t("code",null,"else-if"),e(".")],-1),Rd=t("td",{style:{"text-align":"left"}},"✅",-1),Nd=t("td",{style:{"text-align":"left"}},"🔧",-1),Ud=t("td",{style:{"text-align":"left"}},null,-1),Bd={style:{"text-align":"left"}},Ld=t("td",{style:{"text-align":"left"}},[e("Prefer ternary expressions over simple "),t("code",null,"if-else"),e(" statements.")],-1),Id=t("td",{style:{"text-align":"left"}},"✅",-1),Md=t("td",{style:{"text-align":"left"}},"🔧",-1),Od=t("td",{style:{"text-align":"left"}},null,-1),Td={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"left"}},"Prefer top-level await over top-level promises and async function calls.",-1),Vd=t("td",{style:{"text-align":"left"}},"✅",-1),zd=t("td",{style:{"text-align":"left"}},null,-1),Jd=t("td",{style:{"text-align":"left"}},"💡",-1),Wd={style:{"text-align":"left"}},Kd=t("td",{style:{"text-align":"left"}},[e("Enforce throwing "),t("code",null,"TypeError"),e(" in type checking conditions.")],-1),Hd=t("td",{style:{"text-align":"left"}},"✅",-1),Xd=t("td",{style:{"text-align":"left"}},"🔧",-1),Yd=t("td",{style:{"text-align":"left"}},null,-1),Gd={style:{"text-align":"left"}},Qd=t("td",{style:{"text-align":"left"}},"Prevent abbreviations.",-1),Zd=t("td",{style:{"text-align":"left"}},"✅",-1),$d=t("td",{style:{"text-align":"left"}},"🔧",-1),tr=t("td",{style:{"text-align":"left"}},null,-1),er={style:{"text-align":"left"}},nr=t("td",{style:{"text-align":"left"}},"Enforce consistent relative URL style.",-1),sr=t("td",{style:{"text-align":"left"}},"✅",-1),lr=t("td",{style:{"text-align":"left"}},"🔧",-1),or=t("td",{style:{"text-align":"left"}},"💡",-1),ir={style:{"text-align":"left"}},ar=t("td",{style:{"text-align":"left"}},[e("Enforce using the separator argument with "),t("code",null,"Array#join()"),e(".")],-1),dr=t("td",{style:{"text-align":"left"}},"✅",-1),rr=t("td",{style:{"text-align":"left"}},"🔧",-1),cr=t("td",{style:{"text-align":"left"}},null,-1),ur={style:{"text-align":"left"}},pr=t("td",{style:{"text-align":"left"}},[e("Enforce using the digits argument with "),t("code",null,"Number#toFixed()"),e(".")],-1),_r=t("td",{style:{"text-align":"left"}},"✅",-1),fr=t("td",{style:{"text-align":"left"}},"🔧",-1),gr=t("td",{style:{"text-align":"left"}},null,-1),hr={style:{"text-align":"left"}},yr=t("td",{style:{"text-align":"left"}},[e("Enforce using the "),t("code",null,"targetOrigin"),e(" argument with "),t("code",null,"window.postMessage()"),e(".")],-1),mr=t("td",{style:{"text-align":"left"}},null,-1),xr=t("td",{style:{"text-align":"left"}},null,-1),vr=t("td",{style:{"text-align":"left"}},"💡",-1),kr={style:{"text-align":"left"}},br=t("td",{style:{"text-align":"left"}},"Enforce better string content.",-1),wr=t("td",{style:{"text-align":"left"}},null,-1),qr=t("td",{style:{"text-align":"left"}},"🔧",-1),jr=t("td",{style:{"text-align":"left"}},"💡",-1),Pr={style:{"text-align":"left"}},Er=t("td",{style:{"text-align":"left"}},[e("Enforce consistent brace style for "),t("code",null,"case"),e(" clauses.")],-1),Sr=t("td",{style:{"text-align":"left"}},"✅",-1),Dr=t("td",{style:{"text-align":"left"}},"🔧",-1),Ar=t("td",{style:{"text-align":"left"}},null,-1),Cr={style:{"text-align":"left"}},Rr=t("td",{style:{"text-align":"left"}},"Fix whitespace-insensitive template indentation.",-1),Nr=t("td",{style:{"text-align":"left"}},"✅",-1),Ur=t("td",{style:{"text-align":"left"}},"🔧",-1),Br=t("td",{style:{"text-align":"left"}},null,-1),Lr={style:{"text-align":"left"}},Ir=t("td",{style:{"text-align":"left"}},"Enforce consistent case for text encoding identifiers.",-1),Mr=t("td",{style:{"text-align":"left"}},"✅",-1),Or=t("td",{style:{"text-align":"left"}},"🔧",-1),Tr=t("td",{style:{"text-align":"left"}},"💡",-1),Fr={style:{"text-align":"left"}},Vr=t("td",{style:{"text-align":"left"}},[e("Require "),t("code",null,"new"),e(" when throwing an error.")],-1),zr=t("td",{style:{"text-align":"left"}},"✅",-1),Jr=t("td",{style:{"text-align":"left"}},"🔧",-1),Wr=t("td",{style:{"text-align":"left"}},null,-1),Kr=t("h3",{id:"deprecated-rules",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#deprecated-rules","aria-hidden":"true"},"#"),e(" Deprecated Rules")],-1),Hr=t("h2",{id:"preset-configs-eslint-config-js",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#preset-configs-eslint-config-js","aria-hidden":"true"},"#"),e(" Preset configs ("),t("code",null,"eslint.config.js"),e(")")],-1),Xr={href:"https://eslint.org/docs/latest/user-guide/configuring/configuration-files-new",target:"_blank",rel:"noopener noreferrer"},Yr=t("strong",null,"Note",-1),Gr={href:"https://eslint.org/docs/latest/use/configure/configuration-files-new#configuring-language-options",target:"_blank",rel:"noopener noreferrer"},Qr=a(`<h3 id="recommended-config" tabindex="-1"><a class="header-anchor" href="#recommended-config" aria-hidden="true">#</a> Recommended config</h3><p>This plugin exports a <a href="configs/recommended.js"><code>recommended</code> config</a> that enforces good practices.</p><h4 id="es-module-recommended-1" tabindex="-1"><a class="header-anchor" href="#es-module-recommended-1" aria-hidden="true">#</a> ES Module (Recommended)</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> eslintPluginUnicorn <span class="token keyword">from</span> <span class="token string">&#39;eslint-plugin-unicorn&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
		<span class="token comment">// …</span>
		eslintPluginUnicorn<span class="token punctuation">.</span>configs<span class="token punctuation">[</span><span class="token string">&#39;flat/recommended&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token string-property property">&#39;unicorn/better-regex&#39;</span><span class="token operator">:</span> <span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="commonjs-1" tabindex="-1"><a class="header-anchor" href="#commonjs-1" aria-hidden="true">#</a> CommonJS</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> eslintPluginUnicorn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-plugin-unicorn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">[</span>
		<span class="token comment">// …</span>
		eslintPluginUnicorn<span class="token punctuation">.</span>configs<span class="token punctuation">[</span><span class="token string">&#39;flat/recommended&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token string-property property">&#39;unicorn/better-regex&#39;</span><span class="token operator">:</span> <span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="all-config" tabindex="-1"><a class="header-anchor" href="#all-config" aria-hidden="true">#</a> All config</h3><p>This plugin exports an <a href="configs/all.js"><code>all</code> config</a> that makes use of all rules (except for deprecated ones).</p><h4 id="es-module-recommended-2" tabindex="-1"><a class="header-anchor" href="#es-module-recommended-2" aria-hidden="true">#</a> ES Module (Recommended)</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> eslintPluginUnicorn <span class="token keyword">from</span> <span class="token string">&#39;eslint-plugin-unicorn&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
		<span class="token comment">// …</span>
		eslintPluginUnicorn<span class="token punctuation">.</span>configs<span class="token punctuation">[</span><span class="token string">&#39;flat/all&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token string-property property">&#39;unicorn/better-regex&#39;</span><span class="token operator">:</span> <span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="commonjs-2" tabindex="-1"><a class="header-anchor" href="#commonjs-2" aria-hidden="true">#</a> CommonJS</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> eslintPluginUnicorn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-plugin-unicorn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">[</span>
		<span class="token comment">// …</span>
		eslintPluginUnicorn<span class="token punctuation">.</span>configs<span class="token punctuation">[</span><span class="token string">&#39;flat/all&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token string-property property">&#39;unicorn/better-regex&#39;</span><span class="token operator">:</span> <span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="preset-configs-eslintrc-or-package-json" tabindex="-1"><a class="header-anchor" href="#preset-configs-eslintrc-or-package-json" aria-hidden="true">#</a> Preset configs (<code>.eslintrc.*</code> or <code>package.json</code>)</h2>`,13),Zr={href:"https://eslint.org/docs/user-guide/configuring/configuration-files#extending-configuration-files",target:"_blank",rel:"noopener noreferrer"},$r=t("strong",null,"Note",-1),tc={href:"https://eslint.org/docs/user-guide/configuring/language-options#specifying-parser-options",target:"_blank",rel:"noopener noreferrer"},ec={href:"https://eslint.org/docs/user-guide/configuring/language-options#specifying-environments",target:"_blank",rel:"noopener noreferrer"},nc=a(`<h3 id="recommended-config-1" tabindex="-1"><a class="header-anchor" href="#recommended-config-1" aria-hidden="true">#</a> Recommended config</h3><p>This plugin exports a <a href="configs/recommended.js"><code>recommended</code> config</a> that enforces good practices.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-awesome-project&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;eslintConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;plugin:unicorn/recommended&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;unicorn/better-regex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;warn&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="all-config-1" tabindex="-1"><a class="header-anchor" href="#all-config-1" aria-hidden="true">#</a> All config</h3><p>This plugin exports an <a href="configs/all.js"><code>all</code> config</a> that makes use of all rules (except for deprecated ones).</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-awesome-project&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;eslintConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;plugin:unicorn/all&quot;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="maintainers" tabindex="-1"><a class="header-anchor" href="#maintainers" aria-hidden="true">#</a> Maintainers</h2>`,7),sc={href:"https://github.com/sindresorhus",target:"_blank",rel:"noopener noreferrer"},lc={href:"https://github.com/fisker",target:"_blank",rel:"noopener noreferrer"},oc={href:"https://github.com/bmish",target:"_blank",rel:"noopener noreferrer"},ic={href:"https://github.com/futpib",target:"_blank",rel:"noopener noreferrer"},ac=t("h3",{id:"former",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#former","aria-hidden":"true"},"#"),e(" Former")],-1),dc={href:"https://github.com/jfmengels",target:"_blank",rel:"noopener noreferrer"},rc={href:"https://github.com/SamVerschueren",target:"_blank",rel:"noopener noreferrer"},cc={href:"https://github.com/MrHen",target:"_blank",rel:"noopener noreferrer"};function uc(pc,_c){const o=d("ExternalLinkIcon"),s=d("RouterLink");return c(),u("div",null,[t("h1",_,[f,e(" eslint-plugin-unicorn "),t("a",g,[h,n(o)]),e(),t("a",y,[m,n(o)])]),i(" markdownlint-disable-next-line no-inline-html "),x,v,t("p",null,[e("You might want to check out "),t("a",k,[e("XO"),n(o)]),e(", which includes this plugin.")]),t("p",null,[n(s,{to:"/node_modules/eslint-plugin-unicorn/.github/contributing.html"},{default:l(()=>[b]),_:1})]),w,i(" Do not manually modify this list. Run: `npm run fix:eslint-docs` "),i(" begin auto-generated rules list "),t("p",null,[e("💼 "),t("a",q,[e("Configurations"),n(o)]),e(" enabled in."),j,e(" ✅ Set in the "),P,e(),t("a",E,[e("configuration"),n(o)]),e("."),S,e(" 🔧 Automatically fixable by the "),t("a",D,[A,e(" CLI option"),n(o)]),e("."),C,e(" 💡 Manually fixable by "),t("a",R,[e("editor suggestions"),n(o)]),e(".")]),t("table",null,[N,t("tbody",null,[t("tr",null,[t("td",U,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/better-regex.html"},{default:l(()=>[e("better-regex")]),_:1})]),B,L,I,M]),t("tr",null,[t("td",O,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/catch-error-name.html"},{default:l(()=>[e("catch-error-name")]),_:1})]),T,F,V,z]),t("tr",null,[t("td",J,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/consistent-destructuring.html"},{default:l(()=>[e("consistent-destructuring")]),_:1})]),W,K,H,X]),t("tr",null,[t("td",Y,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/consistent-function-scoping.html"},{default:l(()=>[e("consistent-function-scoping")]),_:1})]),G,Q,Z,$]),t("tr",null,[t("td",tt,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/custom-error-definition.html"},{default:l(()=>[e("custom-error-definition")]),_:1})]),et,nt,st,lt]),t("tr",null,[t("td",ot,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/empty-brace-spaces.html"},{default:l(()=>[e("empty-brace-spaces")]),_:1})]),it,at,dt,rt]),t("tr",null,[t("td",ct,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/error-message.html"},{default:l(()=>[e("error-message")]),_:1})]),ut,pt,_t,ft]),t("tr",null,[t("td",gt,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/escape-case.html"},{default:l(()=>[e("escape-case")]),_:1})]),ht,yt,mt,xt]),t("tr",null,[t("td",vt,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/expiring-todo-comments.html"},{default:l(()=>[e("expiring-todo-comments")]),_:1})]),kt,bt,wt,qt]),t("tr",null,[t("td",jt,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/explicit-length-check.html"},{default:l(()=>[e("explicit-length-check")]),_:1})]),Pt,Et,St,Dt]),t("tr",null,[t("td",At,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/filename-case.html"},{default:l(()=>[e("filename-case")]),_:1})]),Ct,Rt,Nt,Ut]),t("tr",null,[t("td",Bt,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/import-style.html"},{default:l(()=>[e("import-style")]),_:1})]),Lt,It,Mt,Ot]),t("tr",null,[t("td",Tt,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/new-for-builtins.html"},{default:l(()=>[e("new-for-builtins")]),_:1})]),Ft,Vt,zt,Jt]),t("tr",null,[t("td",Wt,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-abusive-eslint-disable.html"},{default:l(()=>[e("no-abusive-eslint-disable")]),_:1})]),Kt,Ht,Xt,Yt]),t("tr",null,[t("td",Gt,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-array-callback-reference.html"},{default:l(()=>[e("no-array-callback-reference")]),_:1})]),Qt,Zt,$t,te]),t("tr",null,[t("td",ee,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-array-for-each.html"},{default:l(()=>[e("no-array-for-each")]),_:1})]),ne,se,le,oe]),t("tr",null,[t("td",ie,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-array-method-this-argument.html"},{default:l(()=>[e("no-array-method-this-argument")]),_:1})]),ae,de,re,ce]),t("tr",null,[t("td",ue,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-array-push-push.html"},{default:l(()=>[e("no-array-push-push")]),_:1})]),pe,_e,fe,ge]),t("tr",null,[t("td",he,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-array-reduce.html"},{default:l(()=>[e("no-array-reduce")]),_:1})]),ye,me,xe,ve]),t("tr",null,[t("td",ke,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-await-expression-member.html"},{default:l(()=>[e("no-await-expression-member")]),_:1})]),be,we,qe,je]),t("tr",null,[t("td",Pe,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-console-spaces.html"},{default:l(()=>[e("no-console-spaces")]),_:1})]),Ee,Se,De,Ae]),t("tr",null,[t("td",Ce,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-document-cookie.html"},{default:l(()=>[e("no-document-cookie")]),_:1})]),Re,Ne,Ue,Be]),t("tr",null,[t("td",Le,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-empty-file.html"},{default:l(()=>[e("no-empty-file")]),_:1})]),Ie,Me,Oe,Te]),t("tr",null,[t("td",Fe,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-for-loop.html"},{default:l(()=>[e("no-for-loop")]),_:1})]),Ve,ze,Je,We]),t("tr",null,[t("td",Ke,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-hex-escape.html"},{default:l(()=>[e("no-hex-escape")]),_:1})]),He,Xe,Ye,Ge]),t("tr",null,[t("td",Qe,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-instanceof-array.html"},{default:l(()=>[e("no-instanceof-array")]),_:1})]),Ze,$e,tn,en]),t("tr",null,[t("td",nn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-invalid-remove-event-listener.html"},{default:l(()=>[e("no-invalid-remove-event-listener")]),_:1})]),sn,ln,on,an]),t("tr",null,[t("td",dn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-keyword-prefix.html"},{default:l(()=>[e("no-keyword-prefix")]),_:1})]),rn,cn,un,pn]),t("tr",null,[t("td",_n,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-lonely-if.html"},{default:l(()=>[e("no-lonely-if")]),_:1})]),fn,gn,hn,yn]),t("tr",null,[t("td",mn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-negated-condition.html"},{default:l(()=>[e("no-negated-condition")]),_:1})]),xn,vn,kn,bn]),t("tr",null,[t("td",wn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-nested-ternary.html"},{default:l(()=>[e("no-nested-ternary")]),_:1})]),qn,jn,Pn,En]),t("tr",null,[t("td",Sn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-new-array.html"},{default:l(()=>[e("no-new-array")]),_:1})]),Dn,An,Cn,Rn]),t("tr",null,[t("td",Nn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-new-buffer.html"},{default:l(()=>[e("no-new-buffer")]),_:1})]),Un,Bn,Ln,In]),t("tr",null,[t("td",Mn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-null.html"},{default:l(()=>[e("no-null")]),_:1})]),On,Tn,Fn,Vn]),t("tr",null,[t("td",zn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-object-as-default-parameter.html"},{default:l(()=>[e("no-object-as-default-parameter")]),_:1})]),Jn,Wn,Kn,Hn]),t("tr",null,[t("td",Xn,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-process-exit.html"},{default:l(()=>[e("no-process-exit")]),_:1})]),Yn,Gn,Qn,Zn]),t("tr",null,[t("td",$n,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-static-only-class.html"},{default:l(()=>[e("no-static-only-class")]),_:1})]),ts,es,ns,ss]),t("tr",null,[t("td",ls,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-thenable.html"},{default:l(()=>[e("no-thenable")]),_:1})]),os,is,as,ds]),t("tr",null,[t("td",rs,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-this-assignment.html"},{default:l(()=>[e("no-this-assignment")]),_:1})]),cs,us,ps,_s]),t("tr",null,[t("td",fs,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-typeof-undefined.html"},{default:l(()=>[e("no-typeof-undefined")]),_:1})]),gs,hs,ys,ms]),t("tr",null,[t("td",xs,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-unnecessary-await.html"},{default:l(()=>[e("no-unnecessary-await")]),_:1})]),vs,ks,bs,ws]),t("tr",null,[t("td",qs,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-unnecessary-polyfills.html"},{default:l(()=>[e("no-unnecessary-polyfills")]),_:1})]),js,Ps,Es,Ss]),t("tr",null,[t("td",Ds,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-unreadable-array-destructuring.html"},{default:l(()=>[e("no-unreadable-array-destructuring")]),_:1})]),As,Cs,Rs,Ns]),t("tr",null,[t("td",Us,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-unreadable-iife.html"},{default:l(()=>[e("no-unreadable-iife")]),_:1})]),Bs,Ls,Is,Ms]),t("tr",null,[t("td",Os,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-unused-properties.html"},{default:l(()=>[e("no-unused-properties")]),_:1})]),Ts,Fs,Vs,zs]),t("tr",null,[t("td",Js,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-useless-fallback-in-spread.html"},{default:l(()=>[e("no-useless-fallback-in-spread")]),_:1})]),Ws,Ks,Hs,Xs]),t("tr",null,[t("td",Ys,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-useless-length-check.html"},{default:l(()=>[e("no-useless-length-check")]),_:1})]),Gs,Qs,Zs,$s]),t("tr",null,[t("td",tl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-useless-promise-resolve-reject.html"},{default:l(()=>[e("no-useless-promise-resolve-reject")]),_:1})]),el,nl,sl,ll]),t("tr",null,[t("td",ol,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-useless-spread.html"},{default:l(()=>[e("no-useless-spread")]),_:1})]),il,al,dl,rl]),t("tr",null,[t("td",cl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-useless-switch-case.html"},{default:l(()=>[e("no-useless-switch-case")]),_:1})]),ul,pl,_l,fl]),t("tr",null,[t("td",gl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-useless-undefined.html"},{default:l(()=>[e("no-useless-undefined")]),_:1})]),hl,yl,ml,xl]),t("tr",null,[t("td",vl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/no-zero-fractions.html"},{default:l(()=>[e("no-zero-fractions")]),_:1})]),kl,bl,wl,ql]),t("tr",null,[t("td",jl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/number-literal-case.html"},{default:l(()=>[e("number-literal-case")]),_:1})]),Pl,El,Sl,Dl]),t("tr",null,[t("td",Al,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/numeric-separators-style.html"},{default:l(()=>[e("numeric-separators-style")]),_:1})]),Cl,Rl,Nl,Ul]),t("tr",null,[t("td",Bl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-add-event-listener.html"},{default:l(()=>[e("prefer-add-event-listener")]),_:1})]),Ll,Il,Ml,Ol]),t("tr",null,[t("td",Tl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-array-find.html"},{default:l(()=>[e("prefer-array-find")]),_:1})]),Fl,Vl,zl,Jl]),t("tr",null,[t("td",Wl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-array-flat.html"},{default:l(()=>[e("prefer-array-flat")]),_:1})]),Kl,Hl,Xl,Yl]),t("tr",null,[t("td",Gl,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-array-flat-map.html"},{default:l(()=>[e("prefer-array-flat-map")]),_:1})]),Ql,Zl,$l,to]),t("tr",null,[t("td",eo,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-array-index-of.html"},{default:l(()=>[e("prefer-array-index-of")]),_:1})]),no,so,lo,oo]),t("tr",null,[t("td",io,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-array-some.html"},{default:l(()=>[e("prefer-array-some")]),_:1})]),ao,ro,co,uo]),t("tr",null,[t("td",po,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-at.html"},{default:l(()=>[e("prefer-at")]),_:1})]),_o,fo,go,ho]),t("tr",null,[t("td",yo,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-blob-reading-methods.html"},{default:l(()=>[e("prefer-blob-reading-methods")]),_:1})]),mo,xo,vo,ko]),t("tr",null,[t("td",bo,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-code-point.html"},{default:l(()=>[e("prefer-code-point")]),_:1})]),wo,qo,jo,Po]),t("tr",null,[t("td",Eo,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-date-now.html"},{default:l(()=>[e("prefer-date-now")]),_:1})]),So,Do,Ao,Co]),t("tr",null,[t("td",Ro,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-default-parameters.html"},{default:l(()=>[e("prefer-default-parameters")]),_:1})]),No,Uo,Bo,Lo]),t("tr",null,[t("td",Io,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-dom-node-append.html"},{default:l(()=>[e("prefer-dom-node-append")]),_:1})]),Mo,Oo,To,Fo]),t("tr",null,[t("td",Vo,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-dom-node-dataset.html"},{default:l(()=>[e("prefer-dom-node-dataset")]),_:1})]),zo,Jo,Wo,Ko]),t("tr",null,[t("td",Ho,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-dom-node-remove.html"},{default:l(()=>[e("prefer-dom-node-remove")]),_:1})]),Xo,Yo,Go,Qo]),t("tr",null,[t("td",Zo,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-dom-node-text-content.html"},{default:l(()=>[e("prefer-dom-node-text-content")]),_:1})]),$o,ti,ei,ni]),t("tr",null,[t("td",si,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-event-target.html"},{default:l(()=>[e("prefer-event-target")]),_:1})]),li,oi,ii,ai]),t("tr",null,[t("td",di,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-export-from.html"},{default:l(()=>[e("prefer-export-from")]),_:1})]),ri,ci,ui,pi]),t("tr",null,[t("td",_i,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-includes.html"},{default:l(()=>[e("prefer-includes")]),_:1})]),fi,gi,hi,yi]),t("tr",null,[t("td",mi,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-json-parse-buffer.html"},{default:l(()=>[e("prefer-json-parse-buffer")]),_:1})]),xi,vi,ki,bi]),t("tr",null,[t("td",wi,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-keyboard-event-key.html"},{default:l(()=>[e("prefer-keyboard-event-key")]),_:1})]),qi,ji,Pi,Ei]),t("tr",null,[t("td",Si,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-logical-operator-over-ternary.html"},{default:l(()=>[e("prefer-logical-operator-over-ternary")]),_:1})]),Di,Ai,Ci,Ri]),t("tr",null,[t("td",Ni,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-math-trunc.html"},{default:l(()=>[e("prefer-math-trunc")]),_:1})]),Ui,Bi,Li,Ii]),t("tr",null,[t("td",Mi,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-modern-dom-apis.html"},{default:l(()=>[e("prefer-modern-dom-apis")]),_:1})]),Oi,Ti,Fi,Vi]),t("tr",null,[t("td",zi,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-modern-math-apis.html"},{default:l(()=>[e("prefer-modern-math-apis")]),_:1})]),Ji,Wi,Ki,Hi]),t("tr",null,[t("td",Xi,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-module.html"},{default:l(()=>[e("prefer-module")]),_:1})]),Yi,Gi,Qi,Zi]),t("tr",null,[t("td",$i,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-native-coercion-functions.html"},{default:l(()=>[e("prefer-native-coercion-functions")]),_:1})]),ta,ea,na,sa]),t("tr",null,[t("td",la,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-negative-index.html"},{default:l(()=>[e("prefer-negative-index")]),_:1})]),oa,ia,aa,da]),t("tr",null,[t("td",ra,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-node-protocol.html"},{default:l(()=>[e("prefer-node-protocol")]),_:1})]),ca,ua,pa,_a]),t("tr",null,[t("td",fa,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-number-properties.html"},{default:l(()=>[e("prefer-number-properties")]),_:1})]),ga,ha,ya,ma]),t("tr",null,[t("td",xa,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-object-from-entries.html"},{default:l(()=>[e("prefer-object-from-entries")]),_:1})]),va,ka,ba,wa]),t("tr",null,[t("td",qa,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-optional-catch-binding.html"},{default:l(()=>[e("prefer-optional-catch-binding")]),_:1})]),ja,Pa,Ea,Sa]),t("tr",null,[t("td",Da,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-prototype-methods.html"},{default:l(()=>[e("prefer-prototype-methods")]),_:1})]),Aa,Ca,Ra,Na]),t("tr",null,[t("td",Ua,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-query-selector.html"},{default:l(()=>[e("prefer-query-selector")]),_:1})]),Ba,La,Ia,Ma]),t("tr",null,[t("td",Oa,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-reflect-apply.html"},{default:l(()=>[e("prefer-reflect-apply")]),_:1})]),Ta,Fa,Va,za]),t("tr",null,[t("td",Ja,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-regexp-test.html"},{default:l(()=>[e("prefer-regexp-test")]),_:1})]),Wa,Ka,Ha,Xa]),t("tr",null,[t("td",Ya,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-set-has.html"},{default:l(()=>[e("prefer-set-has")]),_:1})]),Ga,Qa,Za,$a]),t("tr",null,[t("td",td,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-set-size.html"},{default:l(()=>[e("prefer-set-size")]),_:1})]),ed,nd,sd,ld]),t("tr",null,[t("td",od,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-spread.html"},{default:l(()=>[e("prefer-spread")]),_:1})]),id,ad,dd,rd]),t("tr",null,[t("td",cd,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-string-replace-all.html"},{default:l(()=>[e("prefer-string-replace-all")]),_:1})]),ud,pd,_d,fd]),t("tr",null,[t("td",gd,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-string-slice.html"},{default:l(()=>[e("prefer-string-slice")]),_:1})]),hd,yd,md,xd]),t("tr",null,[t("td",vd,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-string-starts-ends-with.html"},{default:l(()=>[e("prefer-string-starts-ends-with")]),_:1})]),kd,bd,wd,qd]),t("tr",null,[t("td",jd,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-string-trim-start-end.html"},{default:l(()=>[e("prefer-string-trim-start-end")]),_:1})]),Pd,Ed,Sd,Dd]),t("tr",null,[t("td",Ad,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-switch.html"},{default:l(()=>[e("prefer-switch")]),_:1})]),Cd,Rd,Nd,Ud]),t("tr",null,[t("td",Bd,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-ternary.html"},{default:l(()=>[e("prefer-ternary")]),_:1})]),Ld,Id,Md,Od]),t("tr",null,[t("td",Td,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-top-level-await.html"},{default:l(()=>[e("prefer-top-level-await")]),_:1})]),Fd,Vd,zd,Jd]),t("tr",null,[t("td",Wd,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prefer-type-error.html"},{default:l(()=>[e("prefer-type-error")]),_:1})]),Kd,Hd,Xd,Yd]),t("tr",null,[t("td",Gd,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/prevent-abbreviations.html"},{default:l(()=>[e("prevent-abbreviations")]),_:1})]),Qd,Zd,$d,tr]),t("tr",null,[t("td",er,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/relative-url-style.html"},{default:l(()=>[e("relative-url-style")]),_:1})]),nr,sr,lr,or]),t("tr",null,[t("td",ir,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/require-array-join-separator.html"},{default:l(()=>[e("require-array-join-separator")]),_:1})]),ar,dr,rr,cr]),t("tr",null,[t("td",ur,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/require-number-to-fixed-digits-argument.html"},{default:l(()=>[e("require-number-to-fixed-digits-argument")]),_:1})]),pr,_r,fr,gr]),t("tr",null,[t("td",hr,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/require-post-message-target-origin.html"},{default:l(()=>[e("require-post-message-target-origin")]),_:1})]),yr,mr,xr,vr]),t("tr",null,[t("td",kr,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/string-content.html"},{default:l(()=>[e("string-content")]),_:1})]),br,wr,qr,jr]),t("tr",null,[t("td",Pr,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/switch-case-braces.html"},{default:l(()=>[e("switch-case-braces")]),_:1})]),Er,Sr,Dr,Ar]),t("tr",null,[t("td",Cr,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/template-indent.html"},{default:l(()=>[e("template-indent")]),_:1})]),Rr,Nr,Ur,Br]),t("tr",null,[t("td",Lr,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/text-encoding-identifier-case.html"},{default:l(()=>[e("text-encoding-identifier-case")]),_:1})]),Ir,Mr,Or,Tr]),t("tr",null,[t("td",Fr,[n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/rules/throw-new-error.html"},{default:l(()=>[e("throw-new-error")]),_:1})]),Vr,zr,Jr,Wr])])]),i(" end auto-generated rules list "),Kr,t("p",null,[e("See "),n(s,{to:"/node_modules/eslint-plugin-unicorn/docs/deprecated-rules.html"},{default:l(()=>[e("docs/deprecated-rules.md")]),_:1})]),Hr,t("p",null,[e("See the "),t("a",Xr,[e("ESLint docs"),n(o)]),e(" for more information about extending config files.")]),t("p",null,[Yr,e(": Preset configs will also enable the correct "),t("a",Gr,[e("language options"),n(o)]),e(".")]),Qr,t("p",null,[e("See the "),t("a",Zr,[e("ESLint docs"),n(o)]),e(" for more information about extending config files.")]),t("p",null,[$r,e(": Preset configs will also enable the correct "),t("a",tc,[e("parser options"),n(o)]),e(" and "),t("a",ec,[e("environment"),n(o)]),e(".")]),nc,t("ul",null,[t("li",null,[t("a",sc,[e("Sindre Sorhus"),n(o)])]),t("li",null,[t("a",lc,[e("Fisker Cheung"),n(o)])]),t("li",null,[t("a",oc,[e("Bryan Mishkin"),n(o)])]),t("li",null,[t("a",ic,[e("futpib"),n(o)])])]),ac,t("ul",null,[t("li",null,[t("a",dc,[e("Jeroen Engels"),n(o)])]),t("li",null,[t("a",rc,[e("Sam Verschueren"),n(o)])]),t("li",null,[t("a",cc,[e("Adam Babcock"),n(o)])])])])}const gc=r(p,[["render",uc],["__file","index.html.vue"]]);export{gc as default};
